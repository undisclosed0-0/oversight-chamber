
<html lang="en"> 
<head> 
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Classroom Payment System</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js"></script>
  
  <style>    body {
    font-family: 'Arial', sans-serif;
    background-color: #f0f8ff; /* Alice Blue */
    display: flex;
    justify-content: center;
    align-items: flex-start; /* Align to the top for better content display */
    min-height: 100vh;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
}

.container {
    background-color: #ffffff;
    padding: 30px 40px;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 700px;
    text-align: center;
}

h1 {
    color: #4682b4; /* Steel Blue */
    margin-bottom: 25px;
    font-size: 2.5em;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
}

h2 {
    color: #6a5acd; /* Slate Blue */
    margin-top: 30px;
    margin-bottom: 15px;
    font-size: 1.8em;
}

p {
    color: #555;
    line-height: 1.6;
}

input[type="text"] {
    width: calc(100% - 20px);
    padding: 12px;
    margin: 15px 0;
    border: 2px solid #a9a9a9; /* Dark Gray */
    border-radius: 8px;
    font-size: 1em;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

input[type="text"]:focus {
    border-color: #6a5acd; /* Slate Blue */
    box-shadow: 0 0 8px rgba(106, 90, 205, 0.3);
    outline: none;
}

button {
    background-color: #20b2aa; /* Light Sea Green */
    color: white;
    padding: 12px 25px;
    border: none;
    border-radius: 8px;
    font-size: 1.1em;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    margin: 10px;
    box-shadow: 0 4px 10px rgba(32, 178, 170, 0.3);
}

button:hover {
    background-color: #1e8e86; /* Darker Light Sea Green */
    transform: translateY(-2px);
}

button:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(32, 178, 170, 0.4);
}

.qr-code {
    display: flex;
    justify-content: center;
    padding: 20px;
    margin-top: 20px;
    background-color: #f8f8f8;
    border: 1px dashed #ccc;
    border-radius: 10px;
}

.qr-code img {
    max-width: 180px;
    height: auto;
    border-radius: 5px;
}

.small-text {
    font-size: 0.85em;
    color: #888;
    margin-top: 15px;
}

.section {
    margin-bottom: 40px;
    padding-bottom: 20px;
    border-bottom: 1px dashed #eee;
}

.section:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

#balanceDisplay {
    background-color: #e0ffff; /* Light Cyan */
    border: 1px solid #add8e6; /* Light Blue */
    padding: 20px;
    margin-top: 20px;
    border-radius: 10px;
    text-align: left;
}

#balanceDisplay p {
    margin: 5px 0;
    color: #333;
}

.reset-button {
    background-color: #dc3545; /* Red */
    margin-top: 25px;
}

.reset-button:hover {
    background-color: #c82333; /* Darker Red */
}
 /* Prestige Atmosphere Enhancements */
body {
    background: radial-gradient(circle at top center, #f5f7fa 0%, #e6ecf0 100%);
    font-family: 'Segoe UI', sans-serif;
    color: #333;
}

.container {
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 0 20px rgba(75, 63, 114, 0.2);
    backdrop-filter: blur(6px);
    transition: box-shadow 0.3s ease;
}

.container:hover {
    box-shadow: 0 0 30px rgba(75, 63, 114, 0.4);
}

h1, h2 {
    color: #4b3f72;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
}

button {
    background: linear-gradient(to right, #2e8b57, #3cb371);
    box-shadow: 0 4px 12px rgba(46, 139, 87, 0.3);
}

button:hover {
    background: linear-gradient(to right, #3cb371, #2e8b57);
    transform: translateY(-2px);
}

/* Tier-Based Aura Classes */
.initiate-aura {
    border-left: 6px solid #a2d2ff;
    background: #f0f8ff;
}

.journeyman-aura {
    border-left: 6px solid #6a5acd;
    background: #f5f7fa;
}

.elder-aura {
    border-left: 6px solid #4b3f72;
    background: #eaeaea;
} 
.initiate-aura {
    border-left: 6px solid #a2d2ff;
    background: #f0f8ff;
}

.journeyman-aura {
    border-left: 6px solid #6a5acd;
    background: #f5f7fa;
}

.elder-aura {
    border-left: 6px solid #4b3f72;
    background: #eaeaea;
}  
  body {
  background: radial-gradient(circle at top center, #f5f7fa 0%, #e6ecf0 100%);
  background-image: url('grain.png'); /* subtle noise texture */
  background-blend-mode: overlay;
}
 /* Existing styles... */

.container {
  background-color: #ffffff;
  padding: 30px 40px;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 700px;
  text-align: center;
}

/* ⬇️ Add this BELOW everything else */
body {
  background: radial-gradient(circle at top center, #f5f7fa 0%, #e6ecf0 100%);
  background-image: url('grain.png');
  background-blend-mode: overlay;
  font-family: 'Segoe UI', sans-serif;
  color: #333;
}

/* ...and so on */ </style>
</head>
<body>
  <div class="nav-bar">
  <a href="URL-to-index">Main Panel</a>
  <a href="URL-to-payment">Exchange</a>
  <a href="URL-to-ledger">Archive</a>
  <a href="URL-to-forge">Forge</a>
  <a href="URL-to-admin">Chamber</a>
</div>

<div class="container elder-aura">
  <h1>Classroom "Tap-to-Pay"</h1>

  <div class="section">
    <h2>Generate Your QR Code</h2>
    <p>Enter your student ID to get your personalized payment QR code.</p>
    <input type="text" id="studentIdInput" placeholder="Enter your Student ID">
    <button id="generateQrBtn">Generate QR Code</button>
    <div id="qrcode" class="qr-code"></div>
    <p class="small-text">Hint: Your QR code contains a link like `payment.html?recipient=YOUR_ID`</p>
  </div>

  <div class="section">
    <h2>Make a Payment</h2>
    <p>Scan a recipient's QR code or click the button below to simulate payment.</p>
    <button id="simulateScanBtn">Simulate Scan (Go to Payment Page)</button>
  </div>

  <div class="section">
    <h2>Student Balances</h2>
    <div id="balanceDisplay"></div>
    <button id="resetBalancesBtn" class="reset-button">Reset All Balances</button>
  </div>
</div>

<script src="https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const studentIdInput = document.getElementById('studentIdInput');
    const generateQrBtn = document.getElementById('generateQrBtn');
    const qrcodeDiv = document.getElementById('qrcode');
    const simulateScanBtn = document.getElementById('simulateScanBtn');
    const balanceDisplay = document.getElementById('balanceDisplay');
    const resetBalancesBtn = document.getElementById('resetBalancesBtn');

    let qrcodeInstance = null;

    function initializeBalances() {
      if (!localStorage.getItem('studentBalances')) {
        const initialBalances = {
          'student1': 100,
          'student2': 100,
          'student3': 100,
        };
        localStorage.setItem('studentBalances', JSON.stringify(initialBalances));
      }
    }

    function displayBalances() {
      const balances = JSON.parse(localStorage.getItem('studentBalances')) || {};
      balanceDisplay.innerHTML = '<h3>Current Balances:</h3>';
      if (Object.keys(balances).length === 0) {
        balanceDisplay.innerHTML += '<p>No student balances found. Generate some!</p>';
        return;
      }
      for (const [id, balance] of Object.entries(balances)) {
        balanceDisplay.innerHTML += `<p><strong>${id}:</strong> $${balance.toFixed(2)}</p>`;
      }
    }

    generateQrBtn.addEventListener('click', () => {
      const studentId = studentIdInput.value.trim();
      if (studentId) {
        const paymentLink = `payment.html?recipient=${studentId}`;
        qrcodeDiv.innerHTML = '';
        qrcodeInstance = new QRCode(qrcodeDiv, {
          text: paymentLink,
          width: 180,
          height: 180,
          colorDark: "#000000",
          colorLight: "#ffffff",
          correctLevel: QRCode.CorrectLevel.H
        });

        let balances = JSON.parse(localStorage.getItem('studentBalances')) || {};
        if (!balances[studentId]) {
          balances[studentId] = 100;
          localStorage.setItem('studentBalances', JSON.stringify(balances));
        }
        displayBalances();
      } else {
        alert('Please enter a Student ID to generate a QR code.');
      }
    });

    simulateScanBtn.addEventListener('click', () => {
      const recipientId = prompt("Enter the recipient's Student ID to simulate scanning their QR code:");
      if (recipientId) {
        window.location.href = `payment.html?recipient=${recipientId}`;
      }
    });

    resetBalancesBtn.addEventListener('click', () => {
      if (confirm('Are you sure you want to reset all student balances? This cannot be undone.')) {
        localStorage.removeItem('studentBalances');
        initializeBalances();
        displayBalances();
        alert('All student balances have been reset!');
      }
    });

    initializeBalances();
    displayBalances();
  });
</script>


</body>
</html>
